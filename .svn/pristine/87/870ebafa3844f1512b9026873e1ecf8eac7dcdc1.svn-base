package com.kiy.common.devices;

import com.kiy.common.Device;
import com.kiy.common.Feature;
import com.kiy.common.Types.Kind;
import com.kiy.common.Types.Model;
import com.kiy.common.Types.Status;
import com.kiy.common.Types.Vendor;

/**
 * 大功率计量遥控开关 东软载波
 * @author HLX Tel:18996470535 
 * @date 2018年6月26日 
 * Copyright:Copyright(c) 2018
 */
public class ESSwitchES0010 extends Device{

	private static final long serialVersionUID = 1L;
	
	/**
	 * 开关状态
	 */
	private boolean feed;
	
	/**
	 * 电压(V)
	 */
	private double voltage;
	
	/**
	 * 电量(kwh)
	 */
	private double electricity;
	
	/**
	 * 电流(A)
	 */
	private double current;
	
	/**
	 * 功率(KW)
	 */
	private double powers;
	
	/**
	 * 获取供电状态
	 * @return
	 */
	public boolean isFeed() {
		return feed;
	}

	/**
	 * 设置供电状态
	 * @param feed
	 */
	public void setFeed(boolean feed) {
		this.feed = feed;
	}
	
	/**
	 * 获取电压读数
	 * @return
	 */
	public double getVoltage() {
		return voltage;
	}

	/**
	 * 设置电压读数
	 * @param voltage
	 */
	public void setVoltage(double voltage) {
		this.voltage = voltage;
	}

	/**
	 * 获取电量读数
	 * @return
	 */
	public double getElectricity() {
		return electricity;
	}

	/**
	 * 设置电量读数
	 * @param electricity
	 */
	public void setElectricity(double electricity) {
		this.electricity = electricity;
	}

	/**
	 * 获取电流读数
	 * @return
	 */
	public double getCurrent() {
		return current;
	}

	/**
	 * 设置电流读数
	 * @param current
	 */
	public void setCurrent(double current) {
		this.current = current;
	}
	
	/**
	 * 
	 * @return 功率
	 */
	public double getPowers() {
		return powers;
	}

	/**
	 * 设置功率
	 * @param powers
	 */
	public void setPowers(double powers) {
		this.powers = powers;
	}

	public ESSwitchES0010() {
		super(Vendor.EASTSOFT, Kind.SWITCH, Model.ES_0010);
	}

	@Override
	public Status getFeatureStatus() {
		return Status.NONE;
	}

	@Override
	public String getIndicate() {
		return feed?"开启":"关闭";
	}

	@Override
	public boolean getSwitchStatus() {
		return feed;
	}

	@Override
	public Feature[] getFeatures() {
		if (features == null)
			features = new Feature[] { new FeatureFeed(0), new FeatureElectricity(1),new FeatureVoltage(2),new FeatureCurrent(3),new FeaturePower(4)};
		return features;
	}

	public class FeatureFeed extends Feature {

		public FeatureFeed(int index) {
			super("Feed", true, false, index, 0, 1, 1, 1);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "开关";
		}

		@Override
		public int getValue() {
			return feed?1:0;
		}

		@Override
		public void setValue(int value) {
			feed = value > 0 ? true : false;
		}

		@Override
		public String getText() {
			return feed?"开启":"关闭";
		}
		
	}
	
	public class FeatureElectricity extends Feature {

		public FeatureElectricity(int index) {
			super("Electricity", true, true, index, 0, 1, 1, 100);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "电量";
		}

		@Override
		public int getValue() {
			return (int) (electricity*100);
		}

		@Override
		public void setValue(int value) {
			electricity = value /100.0;
		}

		@Override
		public String getText() {
			return electricity+"kwh";
		}
		
	}
	
	public class FeatureVoltage extends Feature {

		public FeatureVoltage(int index) {
			super("Electricity", true, true, index, 0, 1, 1, 10);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "电压";
		}

		@Override
		public int getValue() {
			return (int) (voltage*10);
		}

		@Override
		public void setValue(int value) {
			voltage = value /10.0;
		}

		@Override
		public String getText() {
			return voltage+"V";
		}
		
	}
	
	public class FeatureCurrent extends Feature {

		public FeatureCurrent(int index) {
			super("Current", true, true, index, 0, 1, 1, 1000);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "电流";
		}

		@Override
		public int getValue() {
			return (int) (current*1000);
		}

		@Override
		public void setValue(int value) {
			current = value /1000.0;
		}

		@Override
		public String getText() {
			return current+"A";
		}
		
	}
	
	public class FeaturePower extends Feature {

		public FeaturePower(int index) {
			super("Power", true, true, index, 0, 1, 1, 10000);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "功率";
		}

		@Override
		public int getValue() {
			return (int) (powers*10000);
		}

		@Override
		public void setValue(int value) {
			powers = value /10000.0;
		}

		@Override
		public String getText() {
			return powers+"KW";
		}
		
	}
}
