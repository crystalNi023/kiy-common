package com.kiy.common;

import java.io.Serializable;
import java.util.Date;

/**
 * 消息推送
 * @author Administrator
 *
 */
public class Push implements Serializable{

	private static final long serialVersionUID = -6074611216509349856L;
	/**
	 * 标识id
	 */
	private String id;
	/**
	 * 用户id
	 */
	private String userId;
	/**
	 * 设备token
	 */
	private String deviceTokens="default null";
	/**
	 * 设备类型 1：android 2：ios
	 */
	private int deviceType;
	/**
	 * 备注
	 */
	private String remark;
	/**
	 * 创建时间
	 */
	private Date created;
	/**
	 * 修改时间
	 */
	private Date updated;
	
	/**
	 * 获取标识id
	 * @return id
	 */
	public String getId() {
		return id;
	}
	/**
	 * 设置标识id
	 * @param id
	 */
	public void setId(String id) {
		this.id = id;
	}
	/**
	 * 获取用户id
	 * @return 用户id
	 */
	public String getUserId() {
		return userId;
	}
	/**
	 * 设置用户id
	 * @param userId
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}
	/**
	 * 获取设备token
	 * @return
	 */
	public String getDeviceTokens() {
		return deviceTokens;
	}
	/**
	 * 设置设备token
	 * @param deviceTokens
	 */
	public void setDeviceTokens(String deviceTokens) {
		this.deviceTokens = deviceTokens;
	}
	/**
	 * 获取设备类型
	 * @return
	 */
	public int getDeviceType() {
		return deviceType;
	}
	/**
	 * 设置设备类型
	 * @param deviceType
	 */
	public void setDeviceType(int deviceType) {
		this.deviceType = deviceType;
	}
	/**
	 * 获取创建时间
	 * @return
	 */
	public Date getCreated() {
		return created;
	}
	/**
	 * 设置创建时间
	 * @param created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}
	/**
	 * 获取更新时间
	 * @return
	 */
	public Date getUpdated() {
		return updated;
	}
	/**
	 * 设置更新时间
	 * @param updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}
	/**
	 * 获取备注
	 * @return
	 */
	public String getRemark() {
		return remark;
	}
	/**
	 * 设置备注
	 * @param remark
	 */
	public void setRemark(String remark) {
		this.remark = remark;
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((created == null) ? 0 : created.hashCode());
		result = prime * result + ((deviceTokens == null) ? 0 : deviceTokens.hashCode());
		result = prime * result + deviceType;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((remark == null) ? 0 : remark.hashCode());
		result = prime * result + ((updated == null) ? 0 : updated.hashCode());
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Push other = (Push) obj;
		if (created == null) {
			if (other.created != null)
				return false;
		} else if (!created.equals(other.created))
			return false;
		if (deviceTokens == null) {
			if (other.deviceTokens != null)
				return false;
		} else if (!deviceTokens.equals(other.deviceTokens))
			return false;
		if (deviceType != other.deviceType)
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (remark == null) {
			if (other.remark != null)
				return false;
		} else if (!remark.equals(other.remark))
			return false;
		if (updated == null) {
			if (other.updated != null)
				return false;
		} else if (!updated.equals(other.updated))
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}
}
