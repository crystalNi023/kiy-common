package com.kiy.common.devices;

import com.kiy.common.Device;
import com.kiy.common.Feature;
import com.kiy.common.Types.Kind;
import com.kiy.common.Types.Model;
import com.kiy.common.Types.Status;
import com.kiy.common.Types.Vendor;

/**
 * 红外转发学习(东软载波)
 */
public class ESInfraredTransponderES0026 extends Device{

	private static final long serialVersionUID = 1L;

	/**
	 * 按钮控制指令
	 */
	public static final int LEARN_CODE = 2;/* 学习库码 */
	private static final int ONE = 1;/* 按键1 */
	private static final int TWO = 2;/* 按键2 */
	private static final int THREE = 3;/* 按键3 */
	private static final int FOUR = 4;/* 按键4 */
	private static final int FIVE = 5;/* 按键5 */
	private static final int SIX = 6;/* 按键6 */
	private static final int SEVEN = 7;/* 按键7 */
	private static final int EIGHT = 8;/* 按键8 */
	private static final int NINE = 9;/* 按键9 */
	private static final int TEN = 10;/* 按键10 */
	private static final int ELEVEN = 11;/* 按键11 */
	private static final int TWELVE = 12;/* 按键12 */
	private static final int THIRTEEN = 13;/* 按键13 */
	private static final int FOURTEEN = 14;/* 按键14 */
	private static final int FIFTEEN = 15;/* 按键15 */
	private static final int SIXTEEN = 16;/* 按键16 */
	private static final int SEVENTEEN = 17;/* 按键17 */
	private static final int EIGHTEEN = 18;/* 按键18 */
	private static final int NINETEEN = 19;/* 按键19 */
	private static final int TWENTY = 20;/* 按键20 */
	private static final int TWENTY_ONE = 21;/* 按键21 */
	private static final int TWENTY_TWO = 22;/* 按键22 */
	private static final int TWENTY_THREE = 23;/* 按键23 */
	private static final int TWENTY_FOUR = 24;/* 按键24 */

	public ESInfraredTransponderES0026() {
		super(Vendor.EASTSOFT, Kind.INFRARED_TRANSPONDER, Model.ES_0026);
	}

	/**
	 * 判断是否为控制 true-学习 false-控制
	 */
	private boolean learn;

	/**
	 * 控制指令编号
	 */
	private int instruct = 1;
	
	/**
	 * 设备温度
	 */
	private float equipmentTemperature;
	
	/**
	 * 设备湿度
	 */
	private float equipmentHumidness;

	/**
	 * 获取是否为控制 true-学习 false-控制
	 */
	public boolean getLearn() {
		return learn;
	}

	/**
	 * 设置是否为控制 true-学习 false-控制
	 */
	public void setLearn(boolean learn) {
		this.learn = learn;
	}

	/**
	 * 获取控制指令编号
	 * 
	 * @return
	 */
	public int getInstruct() {
		return instruct;
	}

	/**
	 * 设置控制指令编号
	 * 
	 * @param instruct
	 */
	public void setInstruct(int instruct) {
		this.instruct = instruct;
	}
	
	public float getEquipmentTemperature() {
		return equipmentTemperature;
	}

	public void setEquipmentTemperature(float equipmentTemperature) {
		this.equipmentTemperature = equipmentTemperature;
	}

	public float getEquipmentHumidness() {
		return equipmentHumidness;
	}

	public void setEquipmentHumidness(float equipmentHumidness) {
		this.equipmentHumidness = equipmentHumidness;
	}

	@Override
	public Status getFeatureStatus() {
		return Status.NONE;
	}

	@Override
	public String getIndicate() {
		return " 设备温度："+equipmentTemperature+" 设备湿度："+equipmentHumidness;
	}

	@Override
	public boolean getSwitchStatus() {
		return false;
	}

	@Override
	public Feature[] getFeatures() {
		if (features == null)
			features = new Feature[] { new FeatureControl(0), new FeatureInstruct(1),new FeatureEquipmentTemperature(2),new FeatureEquipmentHumidness(3) };
		return features;
	}

	/**
	 * 特性：红外控制feature 0为学习 1为控制
	 */
	public class FeatureControl extends Feature {

		public FeatureControl(int index) {
			super("SWITCH_CONTROL_LEARN", true, false, index, 0, 1, 1, 1);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "控制/学习";
		}

		@Override
		public int getValue() {
			return learn ? 0 : 1;/* 0为学习 1为控制 */
		}

		@Override
		public void setValue(int value) {
			learn = value == 0 ? true : false;/* 0为学习 1为控制 */
		}

		@Override
		public String getText() {
			return learn ? "学习" : "控制";
		}

	}
	
	public class FeatureInstruct extends Feature{

		
		public FeatureInstruct(int index) {
			super("SWITCH_INSTRUCT", true, false, index, 1, 27, 1, 1);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "指令";
		}

		@Override
		public int getValue() {
			return instruct;
		}

		@Override
		public void setValue(int value) {
			instruct = value;
		}

		@Override
		public String getText() {
			switch (instruct) {
				case ONE:
					return "按键1";
				case TWO:
					return "按键2";
				case THREE:
					return "按键3";
				case FOUR:
					return "按键4";
				case FIVE:
					return "按键5";
				case SIX:
					return "按键6";
				case SEVEN:
					return "按键7";
				case EIGHT:
					return "按键8";
				case NINE:
					return "按键9";
				case TEN:
					return "按键10";
				case ELEVEN:
					return "按键11";
				case TWELVE:
					return "按键12";
				case THIRTEEN:
					return "按键13";
				case FOURTEEN:
					return "按键14";
				case FIFTEEN:
					return "按键15";
				case SIXTEEN:
					return "按键16";
				case SEVENTEEN:
					return "按键17";
				case EIGHTEEN:
					return "按键18";
				case NINETEEN:
					return "按键19";
				case TWENTY:
					return "按键20";
				case TWENTY_ONE:
					return "按键21";
				case TWENTY_TWO:
					return "按键22";
				case TWENTY_THREE:
					return "按键23";
				case TWENTY_FOUR:
					return "按键24";
				default:
					break;
			}
			return null;
		}
	}
	/**
	 * 特性：设备温度
	 */
	public class FeatureEquipmentTemperature extends Feature {

		public FeatureEquipmentTemperature(int index) {
			super("EQUIPMENT_TEMPERATURE", true, true, index, 0, 100, 1, 1);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "设备温度";
		}

		@Override
		public int getValue() {
			return (int) (equipmentTemperature * 10);
		}

		@Override
		public void setValue(int value) {
			equipmentTemperature = (float) (value / 10.00);
		}

		@Override
		public String getText() {
			return equipmentTemperature+"℃";
		}
	}
	
	/**
	 * 特性：设备湿度
	 */
	public class FeatureEquipmentHumidness extends Feature {

		public FeatureEquipmentHumidness(int index) {
			super("EQUIPMENT_HUMIDNESS", true, true, index, 0, 100, 1, 1);
		}

		@Override
		public Status getAlarm() {
			return Status.NONE;
		}

		@Override
		public String getName() {
			return "设备湿度";
		}

		@Override
		public int getValue() {
			return (int) (equipmentHumidness * 10);
		}

		@Override
		public void setValue(int value) {
			equipmentHumidness = (float) (value / 10.00);
		}

		@Override
		public String getText() {
			return equipmentHumidness+"%rh";
		}
	}

}
